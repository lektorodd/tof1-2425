[
  {
    "objectID": "intro1-python.html",
    "href": "intro1-python.html",
    "title": "Intro til programmering i Python - Del 1",
    "section": "",
    "text": "F√• denne fila inn i Jupyter Lab?\n\n\n\n\n\n\nOpne Jupyter Lab og velg Fil &gt; Open from URL...\n\nLim inn lenka under i feltet:\nhttps://raw.githubusercontent.com/lektorodd/tof1-2425/main/intro1-python.ipynb\n\nTrykk Enter og fila vil opna seg i Jupyter Lab.\nKort introduksjon til programmering i Python."
  },
  {
    "objectID": "intro1-python.html#utskrift",
    "href": "intro1-python.html#utskrift",
    "title": "Intro til programmering i Python - Del 1",
    "section": "Utskrift",
    "text": "Utskrift\n\nprint(\"Hei ToF1!\")\n\nHei ToF1!\n\n\n\nprint(\"Lange tekstar med mange ord\")\n\nLange tekstar med mange ord\n\n\n\nprint(2+3)\nprint(\"2+3\")\nprint(\"2\" + \"3\")\n\n5\n2+3\n23\n\n\n\nprint(\"tor\"+\"odd\")\n\ntorodd\n\n\n\nprint(\"Tof)\n\n\n  Cell In[5], line 1\n    print(\"Tof)\n          ^\nSyntaxError: unterminated string literal (detected at line 1)\n\n\n\n\nTips: sjekk heilt nederst i feilmeldinga.\nHer er det ein streng som ikkje er avslutta (det manglar hermeteikn)."
  },
  {
    "objectID": "intro1-python.html#variablar",
    "href": "intro1-python.html#variablar",
    "title": "Intro til programmering i Python - Del 1",
    "section": "Variablar",
    "text": "Variablar\n\nnamn = \"Torodd\" \nalder = 32\nprint(namn, alder)\n\nTorodd 32\n\n\nFinare utskrift med f-streng:\n\nprint(f\"Eg heiter {namn} og er {alder} √•r\")\n\nEg heiter Torodd og er 32 √•r\n\n\nMe kan be om input fr√• brukar:\n\n# Be om input\nnamn = input(\"Kva heiter du?\")\nalder = input(\"Kor gammal er du?\")\n\nprint(f\"Du heiter {namn} og er {alder} √•r\")\n\nDu heiter Torodd og er 32 √•r"
  },
  {
    "objectID": "intro1-python.html#datatypar",
    "href": "intro1-python.html#datatypar",
    "title": "Intro til programmering i Python - Del 1",
    "section": "Datatypar",
    "text": "Datatypar\nDet er ulike datatypar i Python:\n\nstreng = \"tekst\"   # str\nheiltal = 12       # int\ndesimaltal = 2.0   # float (flyttal)\nlogisk = True      # bool (enten True (1) eller False (0))\n\nDatatypar avgjer kva som g√•r og ikkje. Til d√∏mes kan me ikkje legga saman ein teksttren og eit heiltal:\n\nprint(streng + heiltall)\n\n\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\nCell In[10], line 1\n----&gt; 1 print(streng + heiltall)\n\nNameError: name 'heiltall' is not defined\n\n\n\nTekst + tekst g√•r derimot fint:\n\nprint(streng+streng)\n\nteksttekst\n\n\nSj√• p√• denne. Ser du ‚Äúlogikken‚Äù? üòä\n\nprint(heiltal + logisk)\n\n13\n\n\nHeiltal + desimaltal gjer automatisk om datatypen til desimaltal:\n\nprint(heiltal + desimaltal)\n\n14.0\n\n\nVed input blir alt tolka som tekst. Me m√• derfor konvertera til tal for √• rekna med det:\n\n# gjere om tekst til heiltal\nalder = int(input(\"Kor gammal er du?\"))\n\nprint(2024-alder)\n\n2008"
  },
  {
    "objectID": "intro1-python.html#rekneoperasjonar",
    "href": "intro1-python.html#rekneoperasjonar",
    "title": "Intro til programmering i Python - Del 1",
    "section": "Rekneoperasjonar",
    "text": "Rekneoperasjonar\n\na = 2\nb = 3\n\n\nprint(\"a + b =\", a+b)    \nprint(\"a - b =\", a-b)\nprint(\"a * b =\", a*b)\nprint(\"a / b =\", a/b)\nprint(\"a^b =\", a**b)\n\na + b = 5\na - b = -1\na * b = 6\na / b = 0.6666666666666666\na^b = 8\n\n\nI tillegg til dei ‚Äúvanlege‚Äù rekneoperasjonane er det to litt andre operasjonar. Sj√• om du ser m√∏nsteret:\n\nprint(11%3)\nprint(11//3)\nprint() # blank linje\nprint(10%3)\nprint(10//3)\nprint() # blank linje\nprint(9%3)\nprint(9//3)\n\n\n2\n3\n\n1\n3\n\n0\n3\n\n\n11//3 er heiltalsdivisjon, alts√• g√•r 3 opp i 11 tre gonger.\n11%3 er resten etter heiltalsdivisjon, alts√• 2. (\\(3\\cdot 3=9\\) og \\(11-9=2\\))"
  },
  {
    "objectID": "intro1-python.html#oppg√•ve",
    "href": "intro1-python.html#oppg√•ve",
    "title": "Intro til programmering i Python - Del 1",
    "section": "Oppg√•ve",
    "text": "Oppg√•ve\nBrukt det me har l√¶rt til no. Lag kalkulatorar som:\n\nBer brukaren skrive inn eit antal liter og som skriv¬†ut kor mange desiliter det tilsvarer (s√∏rg for at brukaren kan skrive inn desimaltal).\nBer brukaren skrive inn temperaturen i grader fahrenheit og som skriv¬†ut temperaturen i grader celsius.\nBer brukaren skrive inn eit antal minutt¬†og som skriv¬†ut kor mange timar (og eventuelt minutt) det svarer til. Her kan det vere nyttig √• bruke heiltalsdivisjon og modulus. input p√• 63 skal gje output ‚Äú1 time og 3 minutt‚Äù.\n\nF√•r du det til kan du gjerne pr√∏ve √• utvide kalkulator 3 til √• dele inn i veker, dagar, timar og minutt (feks).\n\nForslag til l√∏ysing av oppg√•ve 1\n\nliter = float(input(\"Skriv inn liter: \"))\ndesiliter = liter * 10\n\nprint(f\"{liter} L tilsvarar {desiliter:.2f} dL\") \n#:.2f avrundar til 2 desimalar\n\n3.14 L tilsvarar 31.40 dL\n\n\n\n\nForslag til l√∏ysing av oppg√•ve 3:\n\nminutt_input = int(input(\"Tal minutt: \"))\ntimar =  minutt_input // 60\nminutt = minutt_input % 60\nprint(f\"{minutt_input} min tilsvarar {timar} t og {minutt} min\")\n\n63 min tilsvarar 1 t og 3 min\n\n\n\n# tips for √• holda styr p√• d√∏gn, timar osv. \n# ha ein variabel for √• holda styr p√• kor mange minutt \n# du har \"brukt opp\" etterkvart."
  },
  {
    "objectID": "intro1-python.html#neste-gong",
    "href": "intro1-python.html#neste-gong",
    "title": "Intro til programmering i Python - Del 1",
    "section": "Neste gong",
    "text": "Neste gong\n\nvilk√•r\nl√∏kker\nfunksjonar\nkanskje numpy og pyplot"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "ard2.html",
    "href": "ard2.html",
    "title": "Niv√• 2 - legge til knappstyring",
    "section": "",
    "text": "No skal me legga til ein knapp!"
  },
  {
    "objectID": "ard2.html#knappen-skal",
    "href": "ard2.html#knappen-skal",
    "title": "Niv√• 2 - legge til knappstyring",
    "section": "Knappen skal",
    "text": "Knappen skal\n\nEndre trafikklyset fr√• raudt til gr√∏nt (eller omvendt) n√•r den blir trykt\nMe bruker intern pullup-motstand i Arduino (de m√• finne ut kva dette er!)\nDet skal f√∏lge normal trafikklys-sekvens ved endring (gult lys mellom)"
  },
  {
    "objectID": "ard2.html#me-treng",
    "href": "ard2.html#me-treng",
    "title": "Niv√• 2 - legge til knappstyring",
    "section": "Me treng",
    "text": "Me treng\n\nalt fr√• steg 1\n1 knapp med leidningar"
  },
  {
    "objectID": "ard2.html#kopling",
    "href": "ard2.html#kopling",
    "title": "Niv√• 2 - legge til knappstyring",
    "section": "Kopling",
    "text": "Kopling\nKnappen skal koplast til pin 5 og jord\n\n\nüîé F√∏r de programmerer\n\nKva er ein pullup-motstand?\nKvifor treng me pullup-motstand med knappar?\nKva betyr ‚Äúintern pullup‚Äù?\nKva skjer viss me ikkje bruker pullup?\n\n\n\nüëÄ Sj√• p√• koden i boksen under\n\n\n\n\n\n\nKoden\n\n\n\n\n\n// Led-pins er som f√∏r\nconst int raudLys = 2;\nconst int gulLys = 3;\nconst int gronLys = 4;\nconst int knappPin = 5;     // Pin for knappen\n\n// Variabel for √• hugse tilstanden til lyset\nbool erRaudt = true;        // true = raudt lys, false = gr√∏nt lys\n\nvoid setup() {\n  // Set opp LED-pins som f√∏r\n  pinMode(raudLys, OUTPUT);\n  pinMode(gulLys, OUTPUT);\n  pinMode(gronLys, OUTPUT);\n  \n  // Set opp knappen med intern pullup\n  pinMode(knappPin, INPUT_PULLUP);\n  \n  // Start med raudt lys\n  digitalWrite(raudLys, HIGH);\n  digitalWrite(gulLys, LOW);\n  digitalWrite(gronLys, LOW);\n}\n\nvoid loop() {\n  // Les av knappen (LOW = trykt, pga pullup)\n  if (digitalRead(knappPin) == LOW) {\n    if (erRaudt) {\n      // Viss lyset er raudt, bytt til gr√∏nt\n      skiftTilGront();\n    } else {\n      // Viss lyset er gr√∏nt, bytt til raudt\n      skiftTilRaudt();\n    }\n    delay(500);  // Enkel \"debounce\" - unng√• fleire knappetrykk\n  }\n}\n\n// Funksjon for √• skifte til gr√∏nt lys\nvoid skiftTilGront() {\n  digitalWrite(gulLys, HIGH);    // Raudt + gult\n  delay(1000);\n  digitalWrite(raudLys, LOW);     // Skru av raudt\n  digitalWrite(gulLys, LOW);     // Skru av gult\n  digitalWrite(gronLys, HIGH);  // Skru p√• gr√∏nt\n  erRaudt = false;              // Hugs at me no har gr√∏nt lys\n}\n\n// Funksjon for √• skifte til raudt lys\nvoid skiftTilRaudt() {\n  digitalWrite(gronLys, LOW);   // Skru av gr√∏nt\n  digitalWrite(gulLys, HIGH);    // Skru p√• gult\n  delay(1000);\n  digitalWrite(gulLys, LOW);     // Skru av gult\n  digitalWrite(raudLys, HIGH);    // Skru p√• raudt\n  erRaudt = true;               // Hugs at me no har raudt lys\n}\n\n\n\n\nKva gjer variabelen erRaudt?\nKvifor er knappen LOW n√•r den er trykt?\nKva er delay(500) til?\n\n\n\nüí™ Utfordring\nKan du f√• knappen til √• virke berre n√•r lyset har vore same farge i minst 5 sekund?\nHint: Du m√• bruke millis() for √• m√•le tid"
  },
  {
    "objectID": "intro2-python.html",
    "href": "intro2-python.html",
    "title": "Intro til programmering i Python - Del 2",
    "section": "",
    "text": "F√• denne fila inn i Jupyter Lab?\n\n\n\n\n\n\nOpne Jupyter Lab og velg Fil &gt; Open from URL...\n\nLim inn lenka under i feltet: ny lenke her\nhttps://raw.githubusercontent.com/lektorodd/tof1-2425/main/intro2-python.ipynb\n\nTrykk Enter og fila vil opna seg i Jupyter Lab."
  },
  {
    "objectID": "intro2-python.html#for-l√∏kker",
    "href": "intro2-python.html#for-l√∏kker",
    "title": "Intro til programmering i Python - Del 2",
    "section": "for-l√∏kker",
    "text": "for-l√∏kker\nPraktiske n√•r me vil gjenta noko fleire gonger, spesielt om me veit kor mange gonger me skal repetera.\nSj√• p√• d√∏ma under. Ser du kva dei ulike tala i range()-funksjonen gjer?\n\nfor i in range(5):\n    print(i)\n\n0\n1\n2\n3\n4\n\n\n\nfor i in range(5, 11):\n    print(i)\n\n5\n6\n7\n8\n9\n10\n\n\n\nfor i in range(5, 11, 2):\n    print(i)\n\n5\n7\n9\n\n\n\nfor tall in range(1, 11):\n    print(tall)\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\nOppg√•ve!\nBruk informasjonen om¬†range()¬†og skriv om koden ovanfor slik at utskriften blir:\n1. Tala¬†fr√•¬†og med 1 til og med 30.\n2. Dei f√∏rste 100 partala.\n3. 5-gongen (fr√• og med 5 til og med 50).\n4. Tal-sekvensen 21, 28, 35, 42.\n\nfor i in range(1, 31):\n    print(i, end=\", \")\n\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, \n\n\n\nfor i in range(1, 101):\n    print(2*i, end=\", \")\n\n2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, \n\n\nMe kan ogs√• bruka for-l√∏kker for √• g√• gjennom element i ei liste.\n\nfruktliste = [\"Eple\", \"P√¶re\", \"Banan\", \"Plomme\"]\n\nfor frukt in fruktliste:\n    print(frukt)\n\nEple\nP√¶re\nBanan\nPlomme\n\n\nDet er heller ikkje slik at me m√• bruka i-en (eller kva me no vel √• kalla den) i l√∏kka. Me kan kun bruka l√∏kka for √• gjenta noko eit visst antal gonger.\n\nfor i in range(5):\n    print(\"Torodd\")\n\nTorodd\nTorodd\nTorodd\nTorodd\nTorodd"
  },
  {
    "objectID": "intro2-python.html#vilk√•r-og-logiske-operatorar",
    "href": "intro2-python.html#vilk√•r-og-logiske-operatorar",
    "title": "Intro til programmering i Python - Del 2",
    "section": "Vilk√•r og logiske operatorar",
    "text": "Vilk√•r og logiske operatorar\nHandlar om boolske variablar (som me snakka om sist)\n\na = 4\nb = 5\n\nprint(a == b)  # like?\nprint(a &lt;= b)  # mindre eller lik?\nprint(a &gt;= b)  # st√∏rre eller lik?\nprint(a &lt; b)   # mindre enn?\nprint(a &gt; b)   # st√∏rre enn?\nprint(a != b)  # ulik\n\nFalse\nTrue\nFalse\nTrue\nFalse\nTrue\n\n\n\n# kan kombinere\n\nprint(a&lt;b or a&gt;b)       # minst ein av dei m√• stemma\nprint(a&lt;b and a&gt;b)      # begge m√• stemma\n\nTrue\nFalse\n\n\n\nOppg√•ve\nSjekk om eit tal (input) er eit partal st√∏rre enn 100.\n(hint: modulus)\n\n# hente inn tal og gjere om til heiltal\ntal = int(input(\"Skriv inn eit tal: \"))\n          \n# sjekke om talet er b√•de partal og st√∏rre enn 100\n# skrive ut resultatet\nprint(tal&gt;100 and tal%2==0)\n\nFalse"
  },
  {
    "objectID": "intro2-python.html#ifelse-setningar",
    "href": "intro2-python.html#ifelse-setningar",
    "title": "Intro til programmering i Python - Del 2",
    "section": "if/else-setningar",
    "text": "if/else-setningar\nGjer at me kan ta valg i koden basert p√• vilk√•r\n\n# hente inn tal og gjere om til heiltal\ntal = int(input(\"Skriv inn eit tal: \"))\n\nif tal&gt;100 and tal%2==0:\n    print(f\"{tal} er st√∏rre enn 100 og partal\")\nelse:\n    print(f\"{tal} er ikkje st√∏rre enn 100 og partal\")\n\n100 er ikkje st√∏rre enn 100 og partal\n\n\n\nalder = int(input(\"Skriv inn alderen din: \"))\n\n# if elif else\nif alder &lt; 16:\n    print(\"Du er ikkje gamal nok til √• k√∏yra bil\")\nelif alder &lt; 18:\n    print(\"Du kan l√¶rek√∏yra\")\nelse:\n    print(\"Du kan ta lappen\")\n\nDu kan l√¶rek√∏yra"
  },
  {
    "objectID": "intro2-python.html#while-l√∏kker",
    "href": "intro2-python.html#while-l√∏kker",
    "title": "Intro til programmering i Python - Del 2",
    "section": "While-l√∏kker",
    "text": "While-l√∏kker\nL√∏kker som er nyttige n√•r me ikkje veit kor mange gonger me skal gjenta noko. L√∏kka held fram s√• lenge vilk√•ret er sant.\n\nx = 1\n\nwhile x &lt; 11:\n    print(x, end=\", \")\n    x = x + 1            # kan og skriva: x += 1\n\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, \n\n\n\nprint(x)\n\n11\n\n\n\n\n\n\n\n\nUendelege l√∏kker\n\n\n\nOm vilk√•ret i ei while-l√∏kke aldri blir usant, vil l√∏kka k√∏yra for alltid.\nD√∏me p√• ein slik kode:\nx = 1\nwhile x &lt; 10:\n    print(x)\n\n\n\n# skrive ut alle kubikktal mindre enn 10 000.\ntal = 1\n\nwhile tal**3 &lt; 10000:\n    print(tal**3, end=\", \")\n    tal += 1\n\n1, 8, 27, 64, 125, 216, 343, 512, 729, 1000, 1331, 1728, 2197, 2744, 3375, 4096, 4913, 5832, 6859, 8000, 9261,"
  },
  {
    "objectID": "intro2-python.html#funksjonar",
    "href": "intro2-python.html#funksjonar",
    "title": "Intro til programmering i Python - Del 2",
    "section": "Funksjonar",
    "text": "Funksjonar\nMe kan laga v√•re eigne funksjonar i python. Dette kan vera alt fr√• enkle funksjonar som returnerer eit resultat (som matematiske fuksjonar), til meir komplekse funksjonar som gjer fleire ting.\nMe kan t.d. laga ein funksjon for den matematiske funksjonen \\(f(x) = 3x+4\\).\n\ndef f(x):\n    return 3*x + 4\n\n\nprint(f(9))\n\n31\n\n\n\nprint(f\"x = 3, f(x) = {f(3)}\")\n\nx = 3, f(x) = 13\n\n\nFunksjonar kan ta inn eitt eller fleire argument. Funksjonen kan gjera noko (som feks. printe noko til skjermen) eller returnere noko (som feks. eit resultat).\n\n# helsefunksjon - definerer\ndef helsing(namn, alder):\n    print(f\"Du heiter {namn} og er {alder} √•r\")\n\n# bruker funksjonen\nhelsing(\"Torodd\", 33)\n\nDu heiter Torodd og er 33 √•r\n\n\n\nRekursive funksjonar\nFunksjonar som kallar seg sj√∏lv. Nyttig n√•r ein t.d. skal rekne ut ledd i ei talf√∏lge som baserer seg p√• tidlegare ledd.\nLedd \\(n\\), \\(a_n\\), i talf√∏lgja \\(1, 3, 7, 15, \\ldots\\) kan me uttrykka som \\(a_n = 2\\cdot a_{n-1} + 1\\).\n\n# Rekursive formlar \ndef a(n):\n    if n==1:\n        return 1\n    else: \n        return 2*a(n-1) + 1\n\n\na(1)\n\n1\n\n\n\na(3)\n\n7\n\n\n\n# bruke for-l√∏kke for √• skrive ut dei 10 f√∏rste ledda:\nfor i in range(1, 11):\n    print(a(i), end=\", \")\n\nprint(\"...\")\n\n1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, ..."
  },
  {
    "objectID": "intro2-python.html#oppg√•ver-fr√•-project-euler",
    "href": "intro2-python.html#oppg√•ver-fr√•-project-euler",
    "title": "Intro til programmering i Python - Del 2",
    "section": "Oppg√•ver fr√• Project Euler",
    "text": "Oppg√•ver fr√• Project Euler\nProject Euler er ei nettside med matematiske problem som ein kan l√∏ysa ved hjelp av programmering. Me skal sj√• p√• nokre av desse oppg√•vene.\n\nProblem 1\nIf we list all the natural numbers below \\(10\\) that are multiples of \\(3\\) or \\(5\\), we get \\(3, 5, 6\\) and \\(9\\). The sum of these multiples is \\(23\\).\n\n\nFind the sum of all the multiples of \\(3\\) or \\(5\\) below \\(1000\\).\n\n\nProblem 2\nEach new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with \\(1\\) and \\(2\\), the first \\(10\\) terms will be: \\[1, 2, 3, 5, 8, 13, 21, 34, 55, 89, \\dots\\]\nBy considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms."
  },
  {
    "objectID": "intro3-python.html",
    "href": "intro3-python.html",
    "title": "Intro til programmering i Python - Del 3",
    "section": "",
    "text": "F√• denne fila inn i Jupyter Lab?\n\n\n\n\n\n\nOpne Jupyter Lab og velg Fil &gt; Open from URL...\n\nLim inn lenka under i feltet: ny lenke her\nhttps://raw.githubusercontent.com/lektorodd/tof1-2425/main/intro3-python.ipynb\n\nTrykk Enter og fila vil opna seg i Jupyter Lab.\nDagens plan: kort intro til numpy og matplotlib.pyplot."
  },
  {
    "objectID": "intro3-python.html#numpy",
    "href": "intro3-python.html#numpy",
    "title": "Intro til programmering i Python - Del 3",
    "section": "Numpy",
    "text": "Numpy\n\n# importere bibliotek\nimport numpy as np\n\nI biblioteket ligg det mange funksjonar. T.d. kvadratrot:\n\nnp.sqrt(16)\n\n4.0\n\n\nI dokumentasjonen til biblioteket finn me oversikt over funksjonane og korleis me kan bruka dei.\nDokumentasjon: https://numpy.org/\nEin annan nyttig numpy-funksjon er linspace. Denne funksjonen lagar ein array med jamnt fordelte verdiar mellom to gitte punkt.\n\n# (start, slutt, antall tall)\nx = np.linspace(1, 10, 10) \nprint(x)\n\n[ 1.  2.  3.  4.  5.  6.  7.  8.  9. 10.]\n\n\n\nprint(x**2)\n\n[  1.   4.   9.  16.  25.  36.  49.  64.  81. 100.]"
  },
  {
    "objectID": "intro3-python.html#pyplot",
    "href": "intro3-python.html#pyplot",
    "title": "Intro til programmering i Python - Del 3",
    "section": "Pyplot",
    "text": "Pyplot\nPyplot er ein del av matplotlib-biblioteket. Me kan bruka pyplot til √• laga figurar:\n\n# importere bibliotek\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# definere variblar\nx = np.linspace(-2, 2, 100)\ny = x**2\n\n# plotte\nplt.plot(x, y, \"r--\")\nplt.grid()       # rutenett p√• grafen\nplt.axvline()    # vertikal linje (gjennom origo)\nplt.axhline()    # horisontal linje (gjennom origo)\nplt.show()\n\n\n\n\n\n\n\n\n\nD√∏me p√• ‚Äúferdigpynta‚Äù figur\nHer finn du dokumentasjonen til matplotlib: https://matplotlib.org/stable/\n\n\n\n\n\n\nLagre plot\n\n\n\nViss du vil lagra plottet som ei fil, kan du bruka savefig-funksjonen.\nplt.savefig('filnavn.png')\nDenne m√• kallast f√∏r plt.show().\n\n\n\n# importere bibliotek\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# definere variblar\nx = np.linspace(-2, 2, 100)\ny = x**2\n\n# plotte\nplt.plot(x, y, color = \"blue\", linestyle = \"--\")\n\n# pynte\nplt.title(\"Plot som viser andregradsfunksjon\", fontsize = 16)\nplt.xlabel(\"x\", fontsize = 12)\nplt.ylabel(\"f(x)\", fontsize = 12)\nplt.grid()                                           # rutenett p√• grafen\nplt.axvline(color = \"black\")                         # vertikal linje (gjennom origo)\nplt.axhline(color = \"black\")                         # horisontal linje (gjennom origo)\n#plt.savefig(\"plott.png\")\nplt.show()"
  },
  {
    "objectID": "ard1.html",
    "href": "ard1.html",
    "title": "Niv√• 1 - sj√∏lvstyrt trafikklys",
    "section": "",
    "text": "3 LED (raud, gul, gr√∏n)\n3 motstandar (\\(220\\Omega\\))\nBreadboard og leidningar"
  },
  {
    "objectID": "ard1.html#komponentar",
    "href": "ard1.html#komponentar",
    "title": "Niv√• 1 - sj√∏lvstyrt trafikklys",
    "section": "",
    "text": "3 LED (raud, gul, gr√∏n)\n3 motstandar (\\(220\\Omega\\))\nBreadboard og leidningar"
  },
  {
    "objectID": "ard1.html#kopling",
    "href": "ard1.html#kopling",
    "title": "Niv√• 1 - sj√∏lvstyrt trafikklys",
    "section": "Kopling",
    "text": "Kopling\nHugs retning p√• LED."
  },
  {
    "objectID": "ard1.html#kode",
    "href": "ard1.html#kode",
    "title": "Niv√• 1 - sj√∏lvstyrt trafikklys",
    "section": "Kode",
    "text": "Kode\n// F√∏rst gjev me namn til pinnane\n// Dette gjer koden lettare √• lese og forst√•\nconst int raudLys = 2;    // Raud LED kopla til pin 2\nconst int gulLys = 3;     // Gul LED kopla til pin 3\nconst int gronLys = 4;    // Gr√∏n LED kopla til pin 4\n\nvoid setup() {\n  // Her fortel me Arduino at desse pinnane skal vere utgangar\n  pinMode(raudLys, OUTPUT);\n  pinMode(gulLys, OUTPUT);\n  pinMode(gronLys, OUTPUT);\n}\n\nvoid loop() {\n  // RAUDT LYS\n  digitalWrite(raudLys, HIGH);  // Raudt p√•\n  digitalWrite(gulLys, LOW);    // Gult av\n  digitalWrite(gronLys, LOW);   // Gr√∏nt av\n  delay(4000);                  // Vent 4 sekund\n  \n  // RAUDT OG GULT LYS\n  digitalWrite(gulLys, HIGH);   // Skrur p√• gult (raudt er fortsatt p√•)\n  delay(1000);                  // Vent 1 sekund\n  \n  // GR√òNT LYS\n  digitalWrite(raudLys, LOW);   // Raudt av\n  digitalWrite(gulLys, LOW);    // Gult av\n  digitalWrite(gronLys, HIGH);  // Gr√∏nt p√•\n  delay(4000);                  // Vent 4 sekund\n  \n  // GULT LYS\n  digitalWrite(gronLys, LOW);   // Gr√∏nt av\n  digitalWrite(gulLys, HIGH);   // Gult p√•\n  delay(1000);                  // Vent 1 sekund\n  // S√• startar alt p√• nytt!\n}"
  },
  {
    "objectID": "ard3.html",
    "href": "ard3.html",
    "title": "Niv√• 3 - smart trafikklys",
    "section": "",
    "text": "No skal me gjera trafikklyset ‚Äúsmart‚Äù.\nKorleis virkar ultralydsensoren?"
  },
  {
    "objectID": "ard3.html#komponentar",
    "href": "ard3.html#komponentar",
    "title": "Niv√• 3 - smart trafikklys",
    "section": "Komponentar",
    "text": "Komponentar\n\nAlt fr√• niv√• 1 (trafikklys med 3 LED)\nHC-SR04 ultralydsensor\n4 koblingskabler\n(LED og transistor fr√• niv√• 2B er ikkje med her)"
  },
  {
    "objectID": "ard3.html#kopling-av-sensor",
    "href": "ard3.html#kopling-av-sensor",
    "title": "Niv√• 3 - smart trafikklys",
    "section": "Kopling av sensor",
    "text": "Kopling av sensor\n\nVCC ‚Üí 5V p√• Arduino\nGND ‚Üí GND p√• Arduino\nTRIG ‚Üí pin 7 p√• Arduino\nECHO ‚Üí pin 6 p√• Arduino"
  },
  {
    "objectID": "ard3.html#pseudokoden",
    "href": "ard3.html#pseudokoden",
    "title": "Niv√• 3 - smart trafikklys",
    "section": "Pseudokoden",
    "text": "Pseudokoden\n\n\nOppsett:\n\nLED-pins som f√∏r (2,3,4)\nTRIG pin 7\nECHO pin 6\n\nFunksjon for √• m√•le avstand:\n\nSend ut kort puls p√• TRIG (10 mikrosekund)\nM√•l kor lang tid ECHO er HIGH\nRekn ut avstanden\n\nHovudprogram:\n\nM√•l avstanden\nViss avstand mindre enn 50cm:\n\nSkift til gr√∏nt lys (med normal sekvens)\n\nViss avstand st√∏rre enn 50cm og lyset er gr√∏nt:\n\nSkift til raudt lys (med normal sekvens)\n\nVent litt f√∏r neste m√•ling\n\n\n\n\n\n\n\n\n\nTips\n\n\n\n\nBruk pulseIn() for √• m√•le ECHO-tid\nVeg, fart og tid for √• rekna ut avstanden (ECHO-tid i millisekund)\nLegg inn ein liten delay for √• unng√• flimring\nTest ulike avstandar"
  },
  {
    "objectID": "ard3.html#oppg√•ver",
    "href": "ard3.html#oppg√•ver",
    "title": "Niv√• 3 - smart trafikklys",
    "section": "Oppg√•ver",
    "text": "Oppg√•ver\n\nStart med √• f√• sensoren til √• funka\n\n\nLyden g√•r ca. 340 m/s.\nKorleis kan me rekna ut avstanden til eit objekt?\n\n\n\n\n\n\n\nTips for utrekning av avstand\n\n\n\nFor √• lesa av utrekna avstand kan de feks. bruka denne kodesnutten ( i loop)\n// Skriv ut avstanden (for testing)\nSerial.print(\"Avstand: \");\nSerial.print(avstand);\nSerial.println(\" cm\");\n\n\n\n\n\n\n\n\nStartkode\n\n\n\n\n\n// LED-pins\nconst int raudLys = 2;\nconst int gulLys = 3;\nconst int gronLys = 4;\n\n// Ultralydsensor\nconst int trigPin = 7;\nconst int echoPin = 6;\n\n// Variablar\nbool erRaudt = true;\nconst int grenseAvstand = 50;  // Grense i cm\n\nvoid setup() {\n  // Set opp LED-pins\n  pinMode(raudLys, OUTPUT);\n  pinMode(gulLys, OUTPUT);\n  pinMode(gronLys, OUTPUT);\n  \n  // Set opp ultralydsensor\n  pinMode(trigPin, OUTPUT);\n  pinMode(echoPin, INPUT);\n  \n  // Start med raudt lys\n  digitalWrite(raudLys, HIGH);\n  digitalWrite(gulLys, LOW);\n  digitalWrite(gronLys, LOW);\n  \n  // Start seriell kommunikasjon for testing\n  Serial.begin(9600);\n}\n\n// Funksjon for √• m√•le avstand\nint maalAvstand() {\n  // DIN KODE HER:\n  // 1. Send ut triggerpuls\n  // 2. M√•l echo-tid med pulseIn()\n  // 3. Rekn ut avstanden i cm\n  return 0;  // Erstatt med din kode\n}\n\nvoid loop() {\n  // Les av avstanden\n  int avstand = maalAvstand();\n  \n  // Skriv ut avstanden (for testing)\n  Serial.print(\"Avstand: \");\n  Serial.print(avstand);\n  Serial.println(\" cm\");\n  \n  // DIN KODE HER:\n  // 1. Sjekk avstanden\n  // 2. Endre lys viss n√∏dvendig\n  // 3. Legg inn kort pause\n}\n\n// Bruk funksjonane fr√• niv√• 2 for √• skifte lys\nvoid skiftTilGront() {\n  // Din kode her (kopier fr√• niv√• 2)\n}\n\nvoid skiftTilRaudt() {\n  // Din kode her (kopier fr√• niv√• 2)\n}\n\n\n\n\nF√• grunnfunksjonen til √• virke:\n\n\nM√•l avstand\nSkriv ut til serial monitor for √• teste\nF√• lyset til √• skifte ved rett avstand\n\n\nEksperimenter med:\n\n\nKva er best grenseavstand?\nKor ofte b√∏r me m√•le avstanden?\nKor lenge b√∏r lyset vere gr√∏nt?"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Teknologi og forskningsl√¶re 1 - Amalie Skram vgs",
    "section": "",
    "text": "Relevant fagstoff til bruk i tof1 2024-2025."
  },
  {
    "objectID": "index.html#presentasjonar",
    "href": "index.html#presentasjonar",
    "title": "Teknologi og forskningsl√¶re 1 - Amalie Skram vgs",
    "section": "Presentasjonar",
    "text": "Presentasjonar\n\nOm faget\nVitskapleg metode\nDataanalyse med Python (og Seaborn)\nArduino fagdag"
  },
  {
    "objectID": "index.html#programmering",
    "href": "index.html#programmering",
    "title": "Teknologi og forskningsl√¶re 1 - Amalie Skram vgs",
    "section": "Programmering",
    "text": "Programmering\n\nIntro 1 (29. august)\nIntro 2 (05. september)\nIntro 3 (09. september)"
  },
  {
    "objectID": "index.html#andre-greier",
    "href": "index.html#andre-greier",
    "title": "Teknologi og forskningsl√¶re 1 - Amalie Skram vgs",
    "section": "Andre greier",
    "text": "Andre greier\n\nElektronikktest\n\nL√∏ysingsforslag\n\nArduino fagdag - opplegg og kode\n\nNiv√• 1 - sj√∏lvstyrt trafikklys\nNiv√• 2 - legge til knappstyring\nNiv√• 2b - litt om transistor og PWM\nNiv√• 3 - ‚Äúsmart‚Äù trafikklys"
  },
  {
    "objectID": "ard2b.html",
    "href": "ard2b.html",
    "title": "Niv√• 2b - litt om transistor og PWM",
    "section": "",
    "text": "P√• tide √• f√• inn transistoren!"
  },
  {
    "objectID": "ard2b.html#komponentar",
    "href": "ard2b.html#komponentar",
    "title": "Niv√• 2b - litt om transistor og PWM",
    "section": "Komponentar",
    "text": "Komponentar\n\n1 NPN-transistor\n4-6 like LEDar\n1 stk \\(1k\\Omega\\) motstand\n1 stk \\(220\\Omega\\) motstand\nBreadboard og leidningar"
  },
  {
    "objectID": "ard2b.html#kopling",
    "href": "ard2b.html#kopling",
    "title": "Niv√• 2b - litt om transistor og PWM",
    "section": "Kopling",
    "text": "Kopling\n\nTransistor\n\nBase med 1k motand til P9\nEmittor til jord\nCollector til LED\n\nLED\n\nAlle LED-minus til kollektor\nAlle led-plus gjenom \\(220\\Omega\\) til 5V\n\nKnapp\n\nKopla til P5 og jord (som i niv√• 2)"
  },
  {
    "objectID": "ard2b.html#kode",
    "href": "ard2b.html#kode",
    "title": "Niv√• 2b - litt om transistor og PWM",
    "section": "Kode",
    "text": "Kode\nPseudokode (tekst som forklarar kva koden skal gjera). Sj√• om du klarar √• skrive koden sj√∏lv!\n\n\nOppsett:\n\nMe bruker pin 9 for transistor (m√• v√¶re PWM-pin)\nMe bruker pin 5 for knapp med pullup\n\nN√•r knappen blir trykt:\n\nF√∏rst: Full styrke p√• LED-ane i 2 sekund\nS√•: Start dimming\n\nBruk ein loop som g√•r fr√• 255 ned til 0\nBruk analogWrite() for √• styre styrken\nLiten delay() mellom kvar endring\n\nTil slutt: Alt av i 1 sekund\n\nN√•r knappen ikkje er trykt:\n\nAlle LED-ar skal vere av\n\n\n\n\nTips\n\nPWM (analogWrite) bruker verdiar fr√• 0-255\nSt√∏rre tall ‚û°Ô∏è sterkare lys\nPr√∏v ulike hastigheiter p√• dimminga\n\n\n\n\n\n\n\nStartkode\n\n\n\n\n\nHer finn du eit utgangspunkt for koden viss du treng det.\n// Pin-definisjonar\nconst int transistorPin = 9;  // M√Ö vere ein PWM-pin\nconst int knappPin = 5;       // Knapp for √• styre LED-ane\n\nvoid setup() {\n  pinMode(transistorPin, OUTPUT);\n  pinMode(knappPin, INPUT_PULLUP);\n  \n  // Start med LED-ane av\n  digitalWrite(transistorPin, LOW);\n}\n\nvoid loop() {\n  // Les av knappen\n  if (digitalRead(knappPin) == LOW) {\n    // DIN KODE HER:\n    // 1. Skru p√• LED-ane med full styrke\n    // 2. Vent litt\n    // 3. Start dimming med for-loop\n    // 4. Vent f√∏r neste runde\n  }\n  else {\n    digitalWrite(transistorPin, LOW);  // LED-ane av n√•r knappen ikkje er trykt\n  }\n}"
  }
]